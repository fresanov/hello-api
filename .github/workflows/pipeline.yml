name: CI Checks

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  test:
    needs:
      - format-check
    name: Test Application
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.18

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Run Test
        run: make test

      - name: Coverage Check
        run: make coverage

      - name: Generate Report
        run: make report

      - name: Copy Files
        run: |
          mkdir  reports
          cp cover.html reports/.

      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: reports

      - name: Downloads
        run: go get -t ./...

      - name: Run Test
        run: go test ./...
  format-check:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.18
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Run Format Check
        run: make check-format
  build:
    name: Build App
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.18

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build
        run: make build

      - name: debug
        working-directory: ./
        run: ls -al

      - name: Copy Files
        run: |
          mkdir  artifacts
          cp api artifacts/.

      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: artifacts
  deliver:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download binary
        uses: actions/download-artifact@v2
        with:
          name: api
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Still in experimentation phase
          draft: true
          prerelease: true
      - name: Upload Release Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: api
          asset_name: api
          asset_content_type: application/octet-stream
  deploy-function:
    name: Deploy FaaS
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Deploy function
        id: deploy
        uses: aws-actions/configure-aws-credentials@v2
        with:
          name: translate
          entry_point: Translate
          runtime: go116
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - uses: actions/download-artifact@v2
        with:
          name: api
      - name: debug_pre
        working-directory: ./
        run: ls -al
      - name: Zip
        working-directory: ./
        run: zip -j deploy.zip api
      - name: debug_after
        working-directory: ./
        run: ls -al
      - name: Upload Zip
        working-directory: ./
        run: aws lambda update-function-code --function-name helloApi --zip-file fileb://deploy.zip
